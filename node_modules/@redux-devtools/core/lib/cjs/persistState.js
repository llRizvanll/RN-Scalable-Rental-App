"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = persistState;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _mapValues = _interopRequireDefault(require("lodash/mapValues"));

var _identity = _interopRequireDefault(require("lodash/identity"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function persistState(sessionId) {
  var deserializeState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _identity.default;
  var deserializeAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _identity.default;

  if (!sessionId) {
    return function (next) {
      return function () {
        return next.apply(void 0, arguments);
      };
    };
  }

  function deserialize(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      actionsById: (0, _mapValues.default)(state.actionsById, function (liftedAction) {
        return _objectSpread(_objectSpread({}, liftedAction), {}, {
          action: deserializeAction(liftedAction.action)
        });
      }),
      committedState: deserializeState(state.committedState),
      computedStates: state.computedStates.map(function (computedState) {
        return _objectSpread(_objectSpread({}, computedState), {}, {
          state: deserializeState(computedState.state)
        });
      })
    });
  }

  return function (next) {
    return function (reducer, initialState) {
      var key = "redux-dev-session-".concat(sessionId);
      var finalInitialState;

      try {
        var json = localStorage.getItem(key);

        if (json) {
          finalInitialState = deserialize(JSON.parse(json)) || initialState;
          next(reducer, initialState);
        }
      } catch (e) {
        console.warn('Could not read debug session from localStorage:', e); // eslint-disable-line no-console

        try {
          localStorage.removeItem(key);
        } finally {
          finalInitialState = undefined;
        }
      }

      var store = next(reducer, finalInitialState);
      return _objectSpread(_objectSpread({}, store), {}, {
        dispatch: function dispatch(action) {
          store.dispatch(action);

          try {
            localStorage.setItem(key, JSON.stringify(store.getState()));
          } catch (e) {
            console.warn('Could not write debug session to localStorage:', e); // eslint-disable-line no-console
          }

          return action;
        }
      });
    };
  };
}