{"version":3,"sources":["NativeStackView.tsx"],"names":["React","Platform","StyleSheet","View","AppContainer","warnOnce","ScreenStack","ScreenContext","StackActions","useTheme","useSafeAreaFrame","useSafeAreaInsets","HeaderConfig","SafeAreaProviderCompat","getDefaultHeaderHeight","HeaderHeightContext","isAndroid","OS","Container","__DEV__","DebugContainer","props","stackPresentation","rest","MaybeNestedStack","options","route","children","colors","headerShown","contentStyle","Screen","useContext","isHeaderInModal","headerShownPreviousRef","useRef","useEffect","current","name","content","styles","container","backgroundColor","background","topInset","top","dimensions","headerHeight","absoluteFill","RouteView","descriptors","index","navigation","stateKey","render","renderScene","key","gestureEnabled","homeIndicatorHidden","nativeBackButtonDismissalEnabled","navigationBarColor","navigationBarHidden","replaceAnimation","screenOrientation","statusBarAnimation","statusBarColor","statusBarHidden","statusBarStyle","statusBarTranslucent","swipeDirection","transitionDuration","customAnimationOnSwipe","fullScreenSwipeEnabled","stackAnimation","undefined","isHeaderInPush","parentHeaderHeight","dispatch","pop","source","target","emit","type","data","closing","e","dismissCount","nativeEvent","NativeStackViewInner","state","routes","map","NativeStackView","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport warnOnce from 'warn-once';\nimport {\n  ScreenStack,\n  StackPresentationTypes,\n  ScreenContext,\n} from 'react-native-screens';\nimport {\n  ParamListBase,\n  StackActions,\n  StackNavigationState,\n  useTheme,\n  Route,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport HeaderConfig from './HeaderConfig';\nimport SafeAreaProviderCompat from '../utils/SafeAreaProviderCompat';\nimport getDefaultHeaderHeight from '../utils/getDefaultHeaderHeight';\nimport HeaderHeightContext from '../utils/HeaderHeightContext';\n\nconst isAndroid = Platform.OS === 'android';\n\nlet Container = View;\n\nif (__DEV__) {\n  const DebugContainer = (\n    props: ViewProps & { stackPresentation: StackPresentationTypes }\n  ) => {\n    const { stackPresentation, ...rest } = props;\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n    return <View {...rest} />;\n  };\n  // @ts-ignore Wrong props\n  Container = DebugContainer;\n}\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  stackPresentation,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { headerShown = true, contentStyle } = options;\n\n  const Screen = React.useContext(ScreenContext);\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : stackPresentation !== 'push' && headerShown === true;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        stackPresentation !== 'push' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, stackPresentation, route.name]);\n\n  const content = (\n    <Container\n      style={[\n        styles.container,\n        stackPresentation !== 'transparentModal' &&\n          stackPresentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      // @ts-ignore Wrong props passed to View\n      stackPresentation={stackPresentation}>\n      {children}\n    </Container>\n  );\n\n  const topInset = useSafeAreaInsets().top;\n  const dimensions = useSafeAreaFrame();\n  const headerHeight = getDefaultHeaderHeight(\n    dimensions,\n    topInset,\n    stackPresentation\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled isNativeStack style={StyleSheet.absoluteFill}>\n          <HeaderHeightContext.Provider value={headerHeight}>\n            <HeaderConfig {...options} route={route} />\n            {content}\n          </HeaderHeightContext.Provider>\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype NavigationRoute<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> = Route<Extract<RouteName, string>, ParamList[RouteName]> & {\n  state?: NavigationState | PartialState<NavigationState>;\n};\n\nconst RouteView = ({\n  descriptors,\n  route,\n  index,\n  navigation,\n  stateKey,\n}: {\n  descriptors: NativeStackDescriptorMap;\n  route: NavigationRoute<ParamListBase, string>;\n  index: number;\n  navigation: NativeStackNavigationHelpers;\n  stateKey: string;\n}) => {\n  const { options, render: renderScene } = descriptors[route.key];\n  const {\n    gestureEnabled,\n    headerShown,\n    homeIndicatorHidden,\n    nativeBackButtonDismissalEnabled = false,\n    navigationBarColor,\n    navigationBarHidden,\n    replaceAnimation = 'pop',\n    screenOrientation,\n    statusBarAnimation,\n    statusBarColor,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    swipeDirection = 'horizontal',\n    transitionDuration,\n  } = options;\n\n  let {\n    customAnimationOnSwipe,\n    fullScreenSwipeEnabled,\n    stackAnimation,\n    stackPresentation = 'push',\n  } = options;\n\n  if (swipeDirection === 'vertical') {\n    // for `vertical` direction to work, we need to set `fullScreenSwipeEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnSwipe` needs to be set to `true` so the `stackAnimation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenSwipeEnabled === undefined) {\n      fullScreenSwipeEnabled = true;\n    }\n    if (customAnimationOnSwipe === undefined) {\n      customAnimationOnSwipe = true;\n    }\n    if (stackAnimation === undefined) {\n      stackAnimation = 'slide_from_bottom';\n    }\n  }\n\n  if (index === 0) {\n    // first screen should always be treated as `push`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `push`\n    stackPresentation = 'push';\n  }\n\n  const isHeaderInPush = isAndroid\n    ? headerShown\n    : stackPresentation === 'push' && headerShown !== false;\n\n  const dimensions = useSafeAreaFrame();\n  const topInset = useSafeAreaInsets().top;\n  const headerHeight = getDefaultHeaderHeight(\n    dimensions,\n    topInset,\n    stackPresentation\n  );\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const Screen = React.useContext(ScreenContext);\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      isNativeStack\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnSwipe}\n      fullScreenSwipeEnabled={fullScreenSwipeEnabled}\n      homeIndicatorHidden={homeIndicatorHidden}\n      gestureEnabled={isAndroid ? false : gestureEnabled}\n      nativeBackButtonDismissalEnabled={nativeBackButtonDismissalEnabled}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={replaceAnimation}\n      screenOrientation={screenOrientation}\n      stackAnimation={stackAnimation}\n      stackPresentation={stackPresentation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarColor={statusBarColor}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={swipeDirection}\n      transitionDuration={transitionDuration}\n      onHeaderBackButtonClicked={() => {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n          target: stateKey,\n        });\n      }}\n      onWillAppear={() => {\n        navigation.emit({\n          type: 'transitionStart',\n          data: { closing: false },\n          target: route.key,\n        });\n      }}\n      onWillDisappear={() => {\n        navigation.emit({\n          type: 'transitionStart',\n          data: { closing: true },\n          target: route.key,\n        });\n      }}\n      onAppear={() => {\n        navigation.emit({\n          type: 'appear',\n          target: route.key,\n        });\n        navigation.emit({\n          type: 'transitionEnd',\n          data: { closing: false },\n          target: route.key,\n        });\n      }}\n      onDisappear={() => {\n        navigation.emit({\n          type: 'transitionEnd',\n          data: { closing: true },\n          target: route.key,\n        });\n      }}\n      onDismissed={(e) => {\n        navigation.emit({\n          type: 'dismiss',\n          target: route.key,\n        });\n\n        const dismissCount =\n          e.nativeEvent.dismissCount > 0 ? e.nativeEvent.dismissCount : 1;\n\n        navigation.dispatch({\n          ...StackActions.pop(dismissCount),\n          source: route.key,\n          target: stateKey,\n        });\n      }}>\n      <HeaderHeightContext.Provider\n        value={\n          isHeaderInPush !== false ? headerHeight : parentHeaderHeight ?? 0\n        }>\n        <HeaderConfig {...options} route={route} headerShown={isHeaderInPush} />\n        <MaybeNestedStack\n          options={options}\n          route={route}\n          stackPresentation={stackPresentation}>\n          {renderScene()}\n        </MaybeNestedStack>\n      </HeaderHeightContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({\n  state,\n  navigation,\n  descriptors,\n}: Props): JSX.Element {\n  const { key, routes } = state;\n\n  return (\n    <ScreenStack style={styles.container}>\n      {routes.map((route, index) => (\n        <RouteView\n          key={route.key}\n          descriptors={descriptors}\n          route={route}\n          index={index}\n          navigation={navigation}\n          stateKey={key}\n        />\n      ))}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}